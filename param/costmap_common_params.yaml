# Customized for ArloBot
max_obstacle_height: 1  # assume something like an arm is mounted on top of the robot
obstacle_range: 2.5
raytrace_range: 3.0

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
#robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
robot_radius: 0.4509 # ArloBot
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)

map_type: costmap
transform_tolerance: 5 # seconds


origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

obstacle_layer:
 enabled: true
 obstacle_range: 3.0
 raytrace_range: 5.0
 max_obstacle_height:    20.0            # 2.0 m set to higher than flight height
 min_obstacle_height:    0.0            # set just below flight height
 inflation_radius: 0.7
 track_unknown_space: true
 combination_method: 1

inflation_layer:
  enabled:              true
  cost_scaling_factor:  10.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inscribed_radius:     0.46 # view http://wiki.ros.org/costmap_2d for more detail
  circumscribed_radius: 0.50 # view http://wiki.ros.org/costmap_2d for more detail
  inflation_radius:     0.7  # max. distance from an obstacle at which costs are incurred for planning paths.


# observation_sources: scan bump

# scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
# Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note taht the max_obstacle_height is very important too!
# scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3}
# Can we just set up two of these here?
# bump: {data_type: PointCloud , sensor_frame: odom, topic: /pedsim_people_sensor/point_cloud_local, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 3 }
